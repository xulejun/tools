server.port=8080
# \u6570\u636E\u6E90
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.druid.initial-size=5
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://localhost:3306/personal?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false
# mybatis\u6620\u5C04\u914D\u7F6E
mybatis.mapper-locations=classpath*:mapper/*.xml
mybatis.type-aliases-package=com.xlj.tools.bean
# mybatis\u65E5\u5FD7\u6253\u5B57
logging.level.com.xlj.tools.dao=debug

# RabbitMQ
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtual-host=/
# \u53D1\u9001\u7AEF\u786E\u8BA4
#spring.rabbitmq.publisher-confirms=true
# \u751F\u4EA7\u8005\u786E\u8BA4\u5230\u8FBE\u961F\u5217
spring.rabbitmq.publisher-returns=true
# \u53EA\u8981\u62B5\u8FBE\u961F\u5217\uFF0C\u5F02\u6B65\u53D1\u9001\u4F18\u5148\u56DE\u8C03\u5230return-confirm
spring.rabbitmq.template.mandatory=true
# \u624B\u52A8ack
spring.rabbitmq.listener.simple.acknowledge-mode=manual

# thymeleaf \u914D\u7F6E
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
# \u7F13\u5B58\u8BBE\u7F6E\u4E3Afalse, \u8FD9\u6837\u4FEE\u6539\u4E4B\u540E\u9A6C\u4E0A\u751F\u6548\uFF0C\u4FBF\u4E8E\u8C03\u8BD5
spring.thymeleaf.cache=false
# \u4E0A\u4E0B\u6587
server.context-path=/

# \u90AE\u4EF6
spring.mail.host=smtp.qq.com
spring.mail.username=xu-lejun@qq.com
spring.mail.password=uygtbonpxmizjibd

# Redis\u6570\u636E\u5E93\u7D22\u5F15\uFF08\u9ED8\u8BA4\u4E3A0\uFF09
spring.redis.database=0
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=
# \u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.jedis.pool.max-active=20
# \u8FDE\u63A5\u6C60\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.jedis.pool.max-wait=-1
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5
spring.redis.jedis.pool.max-idle=10
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5
spring.redis.jedis.pool.min-idle=0
# \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09
spring.redis.timeout=1000

# spring-session
spring.session.store-type=redis

# \u7EBF\u7A0B\u6C60\u914D\u7F6E
# \u9ED8\u8BA4\u7EBF\u7A0B\u6C60\u5927\u5C0F
spring.task.execution.pool.core-size=5
# \u6700\u5927\u7EBF\u7A0B\u6570
spring.task.execution.pool.max-size=10

# \u722C\u866B\u76F8\u5173\u914D\u7F6E
selenium.webDriverPath=D:/webdriver/chromedriver-89.exe
wechat.cookie="ua_id=sPMMLyRsAXqM9riSAAAAAPabd_hsYeGu_gnTzZ7xtzs=;rand_info=CAESIBtm8zG5C7sywQ1czwkAk6RxO+hIO9WhlJ8Lf0fClZpV;xid=8f70d816c289d4440027c7905f335c24;data_bizuin=3214367260;slave_bizuin=3214367260;slave_sid=bWppSmpQaHNjbFZCa19UOFc0bkJ6YjNJbTkzcFN5dnpId21rbzBkeUhnc3V5ekxoc3VhVmZtekpqU3lKMXhjY1NCbVhwZ0VrNHFhUUhIRzdDZU9PdkV4ak10V0hpSF9malEyNjF2OG96ckVjcFBqdDNOd0VVa0NlWUZ1aHFhNmlMd2gwNVZLMDljb0ViQWdw;data_ticket=auE8A3CerI3Gr2DVLrvzdqNwdNLGIc//FrqWXJ1dnSRuUU+ZkUJsNTPIzWcgVC2T;mm_lang=zh_CN;slave_user=gh_7383a0de3d89;bizuin=3214367260;wxuin=37818771922978;uuid=118e6fe0cfb46c5049cb7e3f3cf9a1cf;"

# XSS\u914D\u7F6E
xss.enabled=true
# \u4E0D\u8FC7\u6EE4\u8DEF\u5F84, \u4EE5\u9017\u53F7\u5206\u5272
xss.excludes=/open/*
# \u8FC7\u6EE4\u8DEF\u5F84, \u9017\u53F7\u5206\u5272
xss.urlPatterns=/*

############\u3010Kafka\u96C6\u7FA4\u3011###########
#spring.kafka.bootstrap-servers=127.0.0.1:9092
############\u3010\u521D\u59CB\u5316\u751F\u4EA7\u8005\u914D\u7F6E\u3011###########
## \u91CD\u8BD5\u6B21\u6570
#spring.kafka.producer.retries=0
## \u5E94\u7B54\u7EA7\u522B:\u591A\u5C11\u4E2A\u5206\u533A\u526F\u672C\u5907\u4EFD\u5B8C\u6210\u65F6\u5411\u751F\u4EA7\u8005\u53D1\u9001ack\u786E\u8BA4(\u53EF\u90090\u30011\u3001all/-1)
#spring.kafka.producer.acks=1
## \u6279\u91CF\u5927\u5C0F
#spring.kafka.producer.batch-size=16384
## \u63D0\u4EA4\u5EF6\u65F6
#spring.kafka.producer.properties.linger.ms=0
## \u5F53\u751F\u4EA7\u7AEF\u79EF\u7D2F\u7684\u6D88\u606F\u8FBE\u5230batch-size\u6216\u63A5\u6536\u5230\u6D88\u606Flinger.ms\u540E,\u751F\u4EA7\u8005\u5C31\u4F1A\u5C06\u6D88\u606F\u63D0\u4EA4\u7ED9kafka
## linger.ms\u4E3A0\u8868\u793A\u6BCF\u63A5\u6536\u5230\u4E00\u6761\u6D88\u606F\u5C31\u63D0\u4EA4\u7ED9kafka,\u8FD9\u65F6\u5019batch-size\u5176\u5B9E\u5C31\u6CA1\u7528\u4E86
## \u751F\u4EA7\u7AEF\u7F13\u51B2\u533A\u5927\u5C0F
#spring.kafka.producer.buffer-memory=33554432
## Kafka\u63D0\u4F9B\u7684\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\u7C7B
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
## \u81EA\u5B9A\u4E49\u5206\u533A\u5668
## spring.kafka.producer.properties.partitioner.class=com.felix.kafka.producer.CustomizePartitioner
#
############\u3010\u521D\u59CB\u5316\u6D88\u8D39\u8005\u914D\u7F6E\u3011###########
## \u9ED8\u8BA4\u7684\u6D88\u8D39\u7EC4ID
#spring.kafka.consumer.properties.group.id=defaultConsumerGroup
## \u662F\u5426\u81EA\u52A8\u63D0\u4EA4offset
#spring.kafka.consumer.enable-auto-commit=true
## \u63D0\u4EA4offset\u5EF6\u65F6(\u63A5\u6536\u5230\u6D88\u606F\u540E\u591A\u4E45\u63D0\u4EA4offset)
#spring.kafka.consumer.auto.commit.interval.ms=1000
## \u5F53kafka\u4E2D\u6CA1\u6709\u521D\u59CBoffset\u6216offset\u8D85\u51FA\u8303\u56F4\u65F6\u5C06\u81EA\u52A8\u91CD\u7F6Eoffset
## earliest:\u91CD\u7F6E\u4E3A\u5206\u533A\u4E2D\u6700\u5C0F\u7684offset;
## latest:\u91CD\u7F6E\u4E3A\u5206\u533A\u4E2D\u6700\u65B0\u7684offset(\u6D88\u8D39\u5206\u533A\u4E2D\u65B0\u4EA7\u751F\u7684\u6570\u636E);
## none:\u53EA\u8981\u6709\u4E00\u4E2A\u5206\u533A\u4E0D\u5B58\u5728\u5DF2\u63D0\u4EA4\u7684offset,\u5C31\u629B\u51FA\u5F02\u5E38;
#spring.kafka.consumer.auto-offset-reset=latest
## \u6D88\u8D39\u4F1A\u8BDD\u8D85\u65F6\u65F6\u95F4(\u8D85\u8FC7\u8FD9\u4E2A\u65F6\u95F4consumer\u6CA1\u6709\u53D1\u9001\u5FC3\u8DF3,\u5C31\u4F1A\u89E6\u53D1rebalance\u64CD\u4F5C)
#spring.kafka.consumer.properties.session.timeout.ms=120000
## \u6D88\u8D39\u8BF7\u6C42\u8D85\u65F6\u65F6\u95F4
#spring.kafka.consumer.properties.request.timeout.ms=180000
## Kafka\u63D0\u4F9B\u7684\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\u7C7B
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
## \u6D88\u8D39\u7AEF\u76D1\u542C\u7684topic\u4E0D\u5B58\u5728\u65F6\uFF0C\u9879\u76EE\u542F\u52A8\u4F1A\u62A5\u9519(\u5173\u6389)
#spring.kafka.listener.missing-topics-fatal=false
## \u8BBE\u7F6E\u6279\u91CF\u6D88\u8D39
## spring.kafka.listener.type=batch
## \u6279\u91CF\u6D88\u8D39\u6BCF\u6B21\u6700\u591A\u6D88\u8D39\u591A\u5C11\u6761\u6D88\u606F
## spring.kafka.consumer.max-poll-records=50

